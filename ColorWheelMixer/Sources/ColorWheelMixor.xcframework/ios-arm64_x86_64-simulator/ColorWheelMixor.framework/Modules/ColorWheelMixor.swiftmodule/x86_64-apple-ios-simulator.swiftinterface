// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ColorWheelMixor
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Combine
import Foundation
import Metal
import MetalKit
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import simd
extension UIKit.UIColor {
  public static func mix(color1: UIKit.UIColor, color2: UIKit.UIColor, factor: CoreFoundation.CGFloat) -> UIKit.UIColor
}
@_Concurrency.MainActor(unsafe) public struct ColorWheel : SwiftUI.View {
  @_Concurrency.MainActor(unsafe) public init(size: CoreFoundation.CGSize = CGSize(width: 300, height: 300), mixColor: SwiftUI.Binding<UIKit.UIColor>, resultColor: SwiftUI.Binding<UIKit.UIColor>)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15ColorWheelMixor0aB0V4bodyQrvp", 0) __
}
